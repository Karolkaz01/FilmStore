@page "/AllClients"
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject SessionService sessionService

<PageTitle>Clients</PageTitle>

<h1>Clients</h1>

@if (user != null)
{

    @if (clients == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <ul class="list-group">
            @foreach (var client in clients)
            {
                <li class="media my-3 card">
                    <div class="media-body m-3">
                        <h5>@client.FirstName @client.LastName</h5>
                        <p> Adress Email: @client.AdressEmail </p>
                        <p> Nr. telefonu: @client.PhoneNr</p>
                        <p> Data założenia konta: @client.RegistrationDate</p>
                        @if (client.RentedFilms > 0)
                        {
                            <p> Aktualnie wypozyczonych filmów: @client.RentedFilms</p>
                        }
                        else
                        {
                            <p> Brak wyporzyczonych filmów </p>
                            <button class="btn btn-primary btn-danger" @onclick="(() => DeleteClient(client.Id))"> Usuń konto </button>
                        }
                    </div>
                </li>
            }
        </ul>
    }

}
else
{
    <h1> Acces not allowed!!!</h1>
}

@code {
    private IEnumerable<ClientDto>? clients;
    private UserInfo? user;

    private IClientService _clientService;


    protected override async Task OnInitializedAsync()
    {
        _clientService = new ClientService();
        clients = _clientService.GetAllClients();
        user = sessionService.GetUser();
    }


    public async void DeleteClient(string id)
    {
        if (_clientService.GetSingleClient(id)?.RentedFilms > 0)
            throw new Exception();
        _clientService.DeleteClient(id);
        Task.Delay(1000);
        clients = _clientService.GetAllClients();
    }
}
